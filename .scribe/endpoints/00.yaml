name: 'Managing Tickets'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tickets'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: 'sort=title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A, C, H, X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: '*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-createdAt'
      'filter[title]': '*fix*'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"ticket","id":179,"attributes":{"title":"Replace this Title","status":"A","createdAt":"2024-11-20T09:25:01.000000Z","updatedAt":"2024-11-20T09:25:01.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/179"}},{"type":"ticket","id":178,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T09:24:56.000000Z","updatedAt":"2024-11-20T09:24:56.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/178"}},{"type":"ticket","id":177,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T09:18:51.000000Z","updatedAt":"2024-11-20T09:18:51.000000Z"},"relationships":{"author":{"data":{"type":"user","id":9},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/9"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/177"}},{"type":"ticket","id":176,"attributes":{"title":"Replace this Title","status":"A","createdAt":"2024-11-20T09:18:46.000000Z","updatedAt":"2024-11-20T09:18:46.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/176"}},{"type":"ticket","id":175,"attributes":{"title":"Replace this Title","status":"A","createdAt":"2024-11-20T09:18:33.000000Z","updatedAt":"2024-11-20T09:18:33.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/175"}},{"type":"ticket","id":174,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T09:18:28.000000Z","updatedAt":"2024-11-20T09:18:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":9},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/9"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/174"}},{"type":"ticket","id":173,"attributes":{"title":"Replace this Title","status":"A","createdAt":"2024-11-20T08:50:32.000000Z","updatedAt":"2024-11-20T08:50:32.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/173"}},{"type":"ticket","id":172,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:49:10.000000Z","updatedAt":"2024-11-20T08:49:10.000000Z"},"relationships":{"author":{"data":{"type":"user","id":9},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/9"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/172"}},{"type":"ticket","id":171,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:49:05.000000Z","updatedAt":"2024-11-20T08:49:05.000000Z"},"relationships":{"author":{"data":{"type":"user","id":10},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/10"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/171"}},{"type":"ticket","id":170,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:48:13.000000Z","updatedAt":"2024-11-20T08:48:13.000000Z"},"relationships":{"author":{"data":{"type":"user","id":10},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/10"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/170"}},{"type":"ticket","id":169,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:48:04.000000Z","updatedAt":"2024-11-20T08:48:04.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/11"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/169"}},{"type":"ticket","id":168,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:47:24.000000Z","updatedAt":"2024-11-20T08:47:24.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/11"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/168"}},{"type":"ticket","id":167,"attributes":{"title":"First Ticket","status":"A","createdAt":"2024-11-20T08:46:15.000000Z","updatedAt":"2024-11-20T08:46:15.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/11"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/167"}},{"type":"ticket","id":166,"attributes":{"title":"Second Ticket","status":"A","createdAt":"2024-11-20T08:46:07.000000Z","updatedAt":"2024-11-20T08:46:07.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/11"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/166"}},{"type":"ticket","id":165,"attributes":{"title":"Replace this Title","status":"A","createdAt":"2024-11-20T08:46:01.000000Z","updatedAt":"2024-11-20T08:46:01.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/165"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/tickets?page=12","prev":null,"next":"http:\/\/localhost\/api\/v1\/tickets?page=2"},"meta":{"current_page":1,"from":1,"last_page":12,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=8","label":"8","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=9","label":"9","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=10","label":"10","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=11","label":"11","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=12","label":"12","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/tickets","per_page":15,"to":15,"total":171}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a ticket'
      description: 'Creates a new ticket record. Users can only create tickets for themselves. Managers can create tickets for any user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: "The ticket's title (method)."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: "The ticket's description."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: "The ticket's status."
        required: true
        example: No-example
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: No-example
          description: No-example
          status: No-example
        relationships:
          author:
            data:
              id: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":107,"attributes":{"title":"asdfasdfasdfasdfasdfsadf","description":"test ticket","status":"A","createdAt":"2024-03-26T04:40:48.000000Z","updatedAt":"2024-03-26T04:40:48.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/107"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific ticket.'
      description: 'Display an individual ticket.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":1,"attributes":{"title":"PATCH Request works","description":"Molestiae quos sed tempore qui culpa delectus voluptatem. Ducimus sunt libero voluptatem eius est animi sint qui. Provident nemo animi rem sed.","status":"C","createdAt":"2024-11-20T03:00:10.000000Z","updatedAt":"2024-11-20T03:25:56.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete ticket.'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace Ticket'
      description: 'Replace the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Rem maxime omnis aut dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: sint
          description: 'Rem maxime omnis aut dolor.'
          status: X
        relationships:
          author:
            data:
              id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tickets/{ticket}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Ticket'
      description: 'Update the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Molestias non quia amet.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: C
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: et
          description: 'Molestias non quia amet.'
          status: C
        relationships:
          author:
            data: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 17|rNrpkK8simhJfYEAnl39FCSsZMWVuArkRemjWqYnd7a42a21'
    controller: null
    method: null
    route: null
    custom: []
